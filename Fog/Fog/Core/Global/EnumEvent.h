// [Fog-Core]
//
// [License]
// MIT, See COPYING file in package

// [Guard]
#ifndef _FOG_CORE_GLOBAL_ENUMEVENT_H
#define _FOG_CORE_GLOBAL_ENUMEVENT_H

// [Dependencies]
#include <Fog/Core/C++/Base.h>

namespace Fog {

//! @addtogroup Fog_Core_Global
//! @{

// ============================================================================
// [Fog::EVENT_CORE]
// ============================================================================

//! @brief Core event IDs.
enum EVENT_CORE_ENUM
{
  // --------------------------------------------------------------------------
  // [Null]
  // --------------------------------------------------------------------------

  //! @brief Null event code.
  //!
  //! Reserved, shouldn't be used.
  EVENT_NULL = 0,

  // --------------------------------------------------------------------------
  // [Object - Create / Destroy]
  // --------------------------------------------------------------------------

  EVENT_CREATE,
  EVENT_DESTROY,
  EVENT_DELETE,

  // --------------------------------------------------------------------------
  // [Object - Properties]
  // --------------------------------------------------------------------------

  EVENT_PROPERTY,

  // --------------------------------------------------------------------------
  // [Object - Hierarchy]
  // --------------------------------------------------------------------------

  EVENT_CHILD_ADD,
  EVENT_CHILD_REMOVE,

  // --------------------------------------------------------------------------
  // [Timer]
  // --------------------------------------------------------------------------

  EVENT_TIMER,

  // --------------------------------------------------------------------------
  // [LayoutEvent]
  // --------------------------------------------------------------------------

  EVENT_LAYOUT_SET,
  EVENT_LAYOUT_REMOVE,

  EVENT_LAYOUT_ITEM_ADD,
  EVENT_LAYOUT_ITEM_REMOVE,
  EVENT_LAYOUT_REQUEST,

  // --------------------------------------------------------------------------
  // [StateEvent]
  // --------------------------------------------------------------------------

  EVENT_ENABLE,
  EVENT_DISABLE,
  EVENT_DISABLE_BY_PARENT,

  // --------------------------------------------------------------------------
  // [VisibilityEvent]
  // --------------------------------------------------------------------------

  EVENT_SHOW,
  EVENT_SHOW_MAXIMIZE,
  EVENT_SHOW_MINIMIZE,
  EVENT_SHOW_FULLSCREEN,
  EVENT_HIDE,
  EVENT_HIDE_BY_PARENT,

  // --------------------------------------------------------------------------
  // [GeometryEvent]
  // --------------------------------------------------------------------------

  EVENT_GEOMETRY,

  // --------------------------------------------------------------------------
  // [OriginEvent]
  // --------------------------------------------------------------------------

  EVENT_ORIGIN,

  // --------------------------------------------------------------------------
  // [FocusEvent]
  // --------------------------------------------------------------------------

  EVENT_FOCUS_IN,
  EVENT_FOCUS_OUT,

  // --------------------------------------------------------------------------
  // [KeyEvent]
  // --------------------------------------------------------------------------

  EVENT_KEY_PRESS,
  EVENT_KEY_RELEASE,

  // --------------------------------------------------------------------------
  // [MouseEvent]
  // --------------------------------------------------------------------------

  EVENT_NCMOUSE_IN,
  EVENT_NCMOUSE_OUT,
  EVENT_NCMOUSE_MOVE,
  EVENT_NCMOUSE_PRESS,
  EVENT_NCMOUSE_RELEASE,

  EVENT_MOUSE_IN,
  EVENT_MOUSE_OUT,
  EVENT_MOUSE_MOVE,
  EVENT_MOUSE_PRESS,
  EVENT_MOUSE_RELEASE,

  EVENT_CLICK,
  EVENT_DOUBLE_CLICK,
  EVENT_WHEEL,

  // --------------------------------------------------------------------------
  // [SelectionEvent]
  // --------------------------------------------------------------------------

  EVENT_CLEAR_SELECTION,
  EVENT_SELECTION_REQUIRED,

  // --------------------------------------------------------------------------
  // [PaintEvent]
  // --------------------------------------------------------------------------

  EVENT_NCPAINT,
  EVENT_PAINT,

  // --------------------------------------------------------------------------
  // [CloseEvent]
  // --------------------------------------------------------------------------

  EVENT_CLOSE,
  EVENT_LAST_WINDOW_CLOSED,

  // --------------------------------------------------------------------------
  // [CheckEvent]
  // --------------------------------------------------------------------------

  EVENT_CHECK,
  EVENT_UNCHECK,

  // --------------------------------------------------------------------------
  // [ThemeEvent]
  // --------------------------------------------------------------------------

  EVENT_THEME,

  // --------------------------------------------------------------------------
  // [AnimationEvent]
  // --------------------------------------------------------------------------

  EVENT_ANIMATION,

  // --------------------------------------------------------------------------
  // [User]
  // --------------------------------------------------------------------------

  //! @brief First user event.
  EVENT_USER = 65536,

  // --------------------------------------------------------------------------
  // [UID]
  // --------------------------------------------------------------------------

  //! @brief Last event that can be used by all libraries.
  //!
  //! This number is first retrieved by Fog::Event::uid() and incremented
  //! each time the function is called.
  EVENT_UID = 10000000
};

//! @}

} // Fog namespace

// [Guard]
#endif // _FOG_CORE_GLOBAL_ENUMEVENT_H
